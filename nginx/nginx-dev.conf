# Nginx development configuration
# Serves frontend and API from same domain using path-based routing

# Example URLs:
#   http://localhost         (frontend)
#   http://localhost/api/*   (backend API)

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Include all conf.d files (rate limiting, etc.)
    include /etc/nginx/conf.d/*.conf;

    # Main server (frontend + API)
    server {
        listen 80;
        server_name localhost;

        # API endpoints - proxy to backend with path rewrite
        location /api/ {
            # Remove /api prefix before proxying to backend
            rewrite ^/api/(.*)$ /$1 break;
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Default size limits for regular API endpoints
            client_max_body_size 10M;
        }

        # Special handling for icon pack installation with larger size limits
        location /api/icons/packs/ {
            # Remove /api prefix before proxying to backend
            rewrite ^/api/(.*)$ /$1 break;
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Allow larger payloads for icon pack uploads (20MB)
            client_max_body_size 20M;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
        }

        # Frontend - serve static files (must come after API routes)
        location / {
            proxy_pass http://frontend:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
