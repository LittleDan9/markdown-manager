FROM python:3.13 AS builder

# Install system dependencies for Playwright and build tools
RUN apt-get update && apt-get install -y \
    ca-certificates \
    libnspr4 \
    libnss3 \
    libdbus-1-3 \
    libatk1.0-0 \
    libatk-bridge2.0-0 \
    libcups2 \
    libxkbcommon0 \
    libatspi2.0-0 \
    libxcomposite1 \
    libxdamage1 \
    libxfixes3 \
    libxrandr2 \
    libgbm1 \
    libasound2 \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app
ENV POETRY_VIRTUALENVS_IN_PROJECT=true

# Copy only dependency files first for better cache usage
COPY ./backend/pyproject.toml ./backend/poetry.lock /app/

# Install Poetry
RUN pip install poetry

# Install Python dependencies and Playwright (including Chromium)
RUN poetry lock && poetry install --no-root
RUN poetry run playwright install-deps
RUN poetry run playwright install chromium


FROM python:3.13-slim AS backend

# Install runtime system dependencies for Playwright
RUN apt-get update && apt-get install -y \
    ca-certificates \
    libnspr4 \
    libnss3 \
    libdbus-1-3 \
    libatk1.0-0 \
    libatk-bridge2.0-0 \
    libcups2 \
    libxkbcommon0 \
    libatspi2.0-0 \
    libxcomposite1 \
    libxdamage1 \
    libxfixes3 \
    libxrandr2 \
    libgbm1 \
    libasound2 \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy only the virtual environment from builder
COPY --from=builder /app/.venv /app/.venv

# Copy the backend application code (excluding dependency files)
COPY ./backend /app

# Set environment variables
ENV PATH="/app/.venv/bin:$PATH"
ENV DEBUG_PASSWORD_RESET_TOKEN=true

# Expose FastAPI port
EXPOSE 8000

# Start FastAPI app
CMD ["python", "-m", "uvicorn", "app.main:app", "--reload", "--host", "0.0.0.0", "--port", "8000"]
