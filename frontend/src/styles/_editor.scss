@use "variables";
@use "mixins";

// ─── MONACO EDITOR STYLES ───

// Monaco Editor Rounding - default case
.monaco-editor,
.monaco-editor .overflow-guard {
  border-radius: 0.5rem;
}

// Fix Monaco editor hover tooltip z-index to appear above toolbar AND preview pane
.monaco-editor .monaco-hover,
.monaco-editor .monaco-hover-content,
.monaco-hover-widget {
  z-index: 10000 !important;
}

// Hide the "View Problem (Alt+F8)" link in hover tooltips for both spell check and markdown lint
// TEMPORARILY DISABLED - Allow tooltip actions to show fixable status and quick fixes
// .monaco-editor .monaco-hover .hover-row .actions {
//   display: none !important;
// }

// Alternative approach - hide specific action links by content
// TEMPORARILY DISABLED - Allow tooltip actions to show fixable status and quick fixes
// .monaco-editor .monaco-hover .hover-row a[title*="View Problem"],
// .monaco-editor .monaco-hover .hover-row a[title*="Alt+F8"] {
//   display: none !important;
// }

// Ensure Monaco editor context menus also appear above toolbar AND preview
.monaco-menu-container {
  z-index: 10000 !important;
}

// Ensure preview container doesn't interfere with editor tooltips
#previewContainer,
#preview {
  z-index: 1 !important; // Lower than tooltip z-index
}

// CRITICAL: Fix the split-view layout to allow tooltips to escape
#main.split-view {
  overflow: visible !important; // Allow tooltips to escape the main container

  .editor-wrapper {
    overflow: visible !important; // Allow tooltips to escape the editor wrapper
  }

  .renderer-wrapper {
    overflow: hidden; // Keep preview contained as normal
  }
}

// Allow hover widgets to escape the editor bounds while keeping editor scrolling intact
#editorContainer {
  // Allow the entire editor container to show overflow for tooltips
  overflow: visible !important;
  // Ensure editor container can layer above preview for tooltips
  position: relative;
  z-index: 10; // Higher than preview but lower than tooltips
}

#editor.has-toolbar {
  // Allow overflow for the main editor container
  overflow: visible !important;

  .monaco-container {
    // Allow overflow for the Monaco container
    overflow: visible !important;

    // Target all Monaco editor elements to allow overflow
    .monaco-editor {
      overflow: visible !important;

      // But keep the view lines container with proper overflow for scrolling
      .view-lines {
        overflow: hidden;
      }

      // Ensure hover widgets can escape all containers
      .monaco-hover-widget,
      .monaco-hover,
      .monaco-hover-content {
        z-index: 10000 !important;
        // Let Monaco handle positioning naturally
      }
    }
  }
}

// When editor has a toolbar, we need to modify the border structure
#editor.has-toolbar {
  border-top: none !important; // Remove top border since toolbar provides it
  border-radius: 0 0 0.5rem 0.5rem !important; // Bottom corners rounded

  // Ensure proper flex layout to prevent Monaco from pushing status bar out
  display: flex !important;
  flex-direction: column !important;
  height: 100% !important;
  min-height: 0 !important;

  // Monaco container takes up available space minus status bar
  .monaco-container {
    border: none !important;
    border-radius: 0 !important; // No radius for Monaco itself
    flex: 1 1 auto;
    min-height: 0; // Allow Monaco to shrink properly
    overflow: hidden; // Ensure Monaco doesn't overflow
  }

  .monaco-editor,
  .monaco-editor .overflow-guard {
    border-radius: 0; // Remove all border radius for Monaco editor
  }

  // When GitHub status bar is present, reserve space for it
  &.has-github-status {
    .monaco-container {
      // Reserve space for the status bar at the bottom (min 40px + borders)
      max-height: calc(100% - 50px); // Reserve 50px for status bar and borders
    }

    // Ensure the GitHub status bar is properly positioned
    .github-status-bar {
      flex: 0 0 auto; // Fixed size, don't grow/shrink
    }
  }

  // If no GitHub status bar is present (guest users), Monaco should have bottom corners
  &.no-github-status {
    .monaco-container {
      border-radius: 0 0 0.5rem 0.5rem !important;
      max-height: 100%; // Can use full height when no status bar
    }

    .monaco-editor,
    .monaco-editor .overflow-guard {
      border-radius: 0 0 0.5rem 0.5rem;
    }
  }
}

// Toolbar should connect seamlessly with editor
.markdown-toolbar {
  border: 1px solid #ced4da;
  border-bottom: none; // Will connect with editor border
  border-radius: 0.5rem 0.5rem 0 0; // Only top corners rounded

  // Ensure consistent height for dropdown buttons
  .heading-dropdown,
  .media-dropdown,
  .format-dropdown {
    .btn {
      height: 27px !important; // Match actual btn-sm height (27px)
      min-height: 27px !important;
      max-height: 27px !important;
      display: flex !important;
      align-items: center !important;
      padding: 0.25rem 0.5rem !important; // Match btn-sm padding
      line-height: 1 !important; // Remove any line-height differences
      box-sizing: border-box !important;
      border: 1px solid transparent !important; // Match other toolbar buttons
    }

    .dropdown-toggle {
      height: 27px !important;
      min-height: 27px !important;
      max-height: 27px !important;
      border: 1px solid transparent !important; // Remove white border
    }

    // Match button variant styling for light/dark modes
    .btn-outline-secondary {
      border-color: transparent !important;
      background-color: transparent !important;
    }

    .btn-outline-secondary:hover,
    .btn-outline-secondary:focus,
    .btn-outline-secondary.show {
      border-color: var(--bs-secondary-border-subtle) !important;
      background-color: var(--bs-secondary-bg-subtle) !important;
    }

    .dropdown-toggle::after {
      margin-left: 0.255em !important; // Adjust dropdown arrow spacing
    }

    // Style the dropdown menu itself - use higher specificity
    &.show .dropdown-menu,
    .dropdown-menu {
      padding: 0.125rem 0 !important; // Very minimal top/bottom padding
      margin: 0 !important; // Remove any margin
      border-radius: 0.25rem !important; // Smaller border radius
      box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important; // Subtle shadow
      min-width: 140px !important; // Smaller minimum width
      max-width: 180px !important; // Prevent it from getting too wide
    }

    // Style dropdown items - use higher specificity
    &.show .dropdown-item,
    .dropdown-item {
      padding: 0.25rem 0.5rem !important; // Much more compact padding
      font-size: 0.8125rem !important; // Slightly smaller font
      line-height: 1.2 !important; // Tighter line height
      white-space: nowrap !important; // Prevent text wrapping

      // Icon spacing
      i {
        width: 14px !important; // Smaller icon width
        text-align: center !important;
        font-size: 0.75rem !important; // Smaller icons
      }

      // Make strong text slightly smaller too
      strong {
        font-size: 0.8125rem !important;
        font-weight: 600 !important; // Slightly less bold
      }

      // Muted text (keyboard shortcuts) smaller
      .text-muted {
        font-size: 0.75rem !important;
      }

      // Hover/focus states
      &:hover,
      &:focus {
        background-color: var(--bs-secondary-bg-subtle) !important;
        color: var(--bs-body-color) !important;
      }

      // Active state
      &:active {
        background-color: var(--bs-primary-bg-subtle) !important;
        color: var(--bs-primary-text-emphasis) !important;
      }
    }
  }

  @include mixins.dark {
    border-color: #495057;
  }
}

// Global dropdown overrides for toolbar dropdowns - even higher specificity
.markdown-toolbar .dropdown-menu {
  padding: 0.125rem 0 !important;
  margin: 0 !important;
  border-radius: 0.25rem !important;
  min-width: 140px !important;
  max-width: 180px !important;
}

.markdown-toolbar .dropdown-item {
  padding: 0.25rem 0.5rem !important;
  font-size: 0.8125rem !important;
  line-height: 1.2 !important;
  white-space: nowrap !important;

  i {
    width: 14px !important;
    text-align: center !important;
    font-size: 0.75rem !important;
  }

  strong {
    font-size: 0.8125rem !important;
    font-weight: 600 !important;
  }

  .text-muted {
    font-size: 0.75rem !important;
  }
}

// GitHub Status Bar - inside the editor border at the bottom
.github-status-bar {
  // Use Bootstrap's semantic background and border colors
  background-color: var(--bs-secondary-bg);
  border-color: #ced4da;
  color: var(--bs-body-color);

  // Only top border since it's inside the editor container
  border-top: 1px solid #ced4da;
  border-bottom: none;
  border-left: none;
  border-right: none;

  // Bottom corners should match the editor container
  border-radius: 0 0 0.5rem 0.5rem;

  // Add subtle shadow to separate from editor content
  box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.1);

  // Ensure proper positioning and sizing
  flex: 0 0 auto; // Don't grow or shrink - fixed size
  height: auto; // Let content determine height
  min-height: 40px; // Minimum height to ensure content fits
  max-height: 60px; // Maximum height to prevent excessive growth
  width: 100%;
  position: relative; // Ensure proper positioning
  z-index: 2; // Above Monaco editor content

  // Ensure proper theming
  @include mixins.dark {
    background-color: var(--bs-dark);
    border-color: #495057;
    box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.05);
  }

  // Smooth transition for theme changes
  transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out;

  // Ensure buttons in the status bar have proper spacing
  .btn-group .btn {
    --bs-btn-border-radius: 0.25rem;
  }

  // Make sure small text is readable in both themes
  .text-muted {
    opacity: 0.7;
  }
}

// Ensure Monaco editor can shrink properly
#editor {
  min-width: 0 !important;
  width: 100% !important;

  // CRITICAL: Ensure the editor uses proper flex layout to constrain Monaco
  display: flex !important;
  flex-direction: column !important;
  height: 100% !important;
  overflow: hidden !important; // Prevent the entire editor from scrolling

  // Override any inline styles that might interfere
  &[style*="height"] {
    height: 100% !important;
  }
}

// Ensure preview content can shrink
#preview,
.preview-scroll {
  min-width: 0 !important;
  width: 100% !important;
}

// Editor loading container to match the editor border styling
.editor-loading-container {
  flex: 1;
  width: 100%;
  border: 1px solid #ced4da;
  border-radius: 0.5rem;
  min-height: 200px;
  display: flex;
  justify-content: center;
  align-items: center;

  @include mixins.dark {
    border-color: #495057;
  }
}
